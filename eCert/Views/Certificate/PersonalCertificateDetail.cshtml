
@model eCert.Models.ViewModel.CertificateViewModel
@using eCert.Models.ViewModel
@using eCert.Utilities

<script src="/assets/js/vendor/jquery-3.5.1.min.js"></script>
<!-- custom js -->
<script src="~/assets/js/custom/PersonalCertificateDetail.js"></script>
<!-- custom js end -->
<!-- third party css -->
<link href="/assets/css/vendor/dataTables.bootstrap4.css"
      rel="stylesheet"
      type="text/css" />
<link href="/assets/css/vendor/responsive.bootstrap4.css"
      rel="stylesheet"
      type="text/css" />
<!-- third party css end -->
<!-- App css -->
<link href="/assets/css/icons.min.css" rel="stylesheet" type="text/css" />
<link href="/assets/css/app.min.css"
      rel="stylesheet"
      type="text/css"
      id="light-style" />
<link href="/assets/css/app-dark.min.css"
      rel="stylesheet"
      type="text/css"
      id="dark-style" />
<!--custom css-->
<link rel="stylesheet"
      type="text/css"
      href="/assets/css/custom/detailCertificate.css" />
@if (Model == null)
{
    <p>You do not have access to this certificate or the system does not have this certificate</p>
}
else
{
    //Get certificate links
    List<CertificateContentsViewModel> links = Model.CertificateContents.Where(cert => cert.CertificateFormat == Constants.CertificateFormat.LINK).ToList();
    //Get certificate files
    List<CertificateContentsViewModel> files = Model.CertificateContents
        .Where(cert => cert.CertificateFormat == Constants.CertificateFormat.JPEG
            || cert.CertificateFormat == Constants.CertificateFormat.JPG
            || cert.CertificateFormat == Constants.CertificateFormat.PNG
            || cert.CertificateFormat == Constants.CertificateFormat.PDF)
        .ToList();

    <div class="general">
        <div class="d-flex flex-row-reverse">
            <a class="btn btn-delete ml-2" onclick="handleDeleteCertificate('Alert', 'Do you want to delete this certificate?', '@Model.Url')">
                    Delete
                </a>
                @*<a href="/Home/EditCertificate?certId=@Model.CertificateId" class="btn btn-edit ml-2" onclick="">
            Edit
        </a>*@
                <a href="/Certificate/DownloadPersonalCertificate?url=@Model.Url" class="btn btn-download">
                    Download
                </a>
</div>

        <div class="card-body mt-2" style="background-color: #D5EAF2">
            <div class="col-lg-5">
                <h3 class="title-cert">Certificate name: @Model.CertificateName</h3>
                <p class="cert-description">Description: @Model.Description</p>
                <div class="row no-gutters align-items-center p-2">
                    <div class="col-sm-2">
                        <img src="~/assets/images/custom/certificate.png" class="card-img" style="width: 73px; height: 73px; border-radius: 50%">
                    </div>
                    <div class="col-sm-10">
                        <div class="card-body">
                            <p class="card-text font-weight-bold">Date of issues: @Model.DateOfIssue.ToString("d/MMM/yyyy")</p>
                            <p class="card-text font-weight-bold">Expiration Date: @Model.DateOfIssue.ToString("d/MMM/yyyy")</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="mt-5 row" style="margin-left: 0.1rem">
            @if (links != null && links.Count > 0)
            {
                <table class="table mb-0 col-5">
                    <thead style="background-color: #D5EAF2">
                        <tr>
                            <th scope="col">No</th>
                            <th scope="col">Link</th>
                        </tr>
                    </thead>
                    <tbody>
                        @* Links *@
                        @for (int i = 0; i < links.Count; i++)
                        {
                            <tr>
                                <th scope="row">@(i + 1)</th>
                                <td>
                                    <a href="@links[i].Content">@links[i].Content</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            @if (files != null && files.Count > 0)
            {
                <!--Attach file-->
                <div class="col-7">
                    <h5 class="m-2" style="color: #174A84">Attachments</h5>
                    <div class="d-flex flex-wrap">
                        @for (int i = 0; i < files.Count; i++)
                        {
                            //Get file name
                            string[] strArr = files[i].Content.Split('\\');
                            string fileName = strArr[strArr.Length - 1];

                            <div class="p-2">
                                <!--First items-->
                                <div class="row align-items-center">
                                    <div class="col-auto">
                                        <div class="avatar-sm">
                                            <span class="avatar-title bg-light text-secondary rounded">
                                                <i class="mdi mdi-folder-zip font-16"></i>
                                            </span>
                                        </div>
                                    </div>
                                    <div class="col pl-0">
                                        <a href="javascript:void(0);" class="text-muted font-weight-bold">@fileName</a>
                                        <p class="mb-0 font-13">2.3 MB</p>
                                    </div>
                                </div> <!-- end row -->
                            </div> <!--First items-->
                        }

                    </div>

                </div><!--End attach file-->
            }

        </div>
    </div>

    @Html.Partial("_ConfirmDialog")
}

